# Начальное сообщение
start_mess1 = f'Отлично! Давай начнем!'

lesson_0 = f'Сейчас тебе предстоит пройти курс по основам <b>Python</b>.\n' \
           f'Сейчас в курсе 1 модуль, состоящий из 8 мини-уроков' \
           f'Курс поделен на темы-блоки, которые состоят из небольшой теории и практического задания.\n' \
           f'За правильное выполнение заданий ты получишь баллы,' \
           f' которые в будущем сможешь потратить на открытие новых модулей курса.'

# Модуль 1
module_1 = f'<ins><b>Модуль 1</b></ins>\n' \
           f'<b>Базовые понятия.</b>\n'
# Урок 1
lesson_1 = f'<b>Урок 1:</b> <ins><b>Введение. О Python.</b></ins>\n'
theory_1_mess = f'Хотите создать изящный веб-сайт? Разработать видео-игру? Или, может быть, создать искусственный ' \
                f'интеллект? <b>Python</b> предоставит вам все необходимое, и даже больше. ' \
                f'Python является <b>высокоуровневым языком программирования</b> с множеством вариантов применения.\n' \
                f'Он является очень гибким и доступным, что делает его популярным среди самых больших (и крутых) ' \
                f'организаций в мире – Google, NASA, Disney...и даже CIA.\n' \
                f'В этом курсе мы рассмотрим основные концепции <b>Python</b>, а также создадим реальные проекты и ' \
                f'решим множество практических упражнений!\n' \
                f'Мы будем изучать <b>Python version 3</b>, которая является самой последней основной версией Python.'

test_1 = f'<ins><b>Тест:</b></ins>\n' \
         f'Какую версию Python мы будем изучать?'
test_1_v1 = "Python 2"
test_1_v2 = "Python 7"
test_1_v3 = "Python 3"
test_1_r = 'var_py3'

# Урок 2
lesson_2 = f'<b>Урок 2</b>\n' \
           f'<ins><b>Hello world</b></ins>\n'
theory_2_mess = f'Часть 1.\n' \
                f'Давайте начнем с создания простой программы, которая выводит текст <b>"Hello world!"</b>.\n' \
                f'\n' \
                f'В Python для вывода текста используется функция <b>print</b>.\n' \
                f'\n' \
                f'Поэтому, чтобы вывести наше сообщение, код должен выглядеть следующим образом:\n' \
                f'\n' \
                f'print("Hello world!")\n' \
                f'\n' \
                f'Хорошая работа! Вы только что написали свою первую программу на Python. Легко, правда?\n' \
                f'\n' \
                f'<b>Внимание!</b>\n' \
                f'Сразу после функции print всегда идут <b>круглые скобки</b>, содержащие выходные данные, ' \
                f'которые мы хотим сгенерировать.'

test_2 = f'<ins><b>Тест:</b></ins>\n' \
         f'Какая функция выводит текст?'
test_2_v1 = "output"
test_2_v2 = "write"
test_2_v3 = "print"
test_2_r = 'var_pr'

theory_2_2_mess = f'Часть 2.\n' \
                  f'Вы можете использовать функцию <b>print</b> для вывода нескольких строк текста.\n' \
                  f'\n' \
                  f'<b>print("Hello world!")</b>\n' \
                  f'<b>print("Hello world!")</b>\n' \
                  f'<b>print("Spam and eggs...")</b>\n' \
                  f'\n' \
                  f'Каждая функция <b>print</b> выведет текст на новой строке.'

test_2_2 = f'<ins><b>Тест:</b></ins>\n' \
           f'Какой вариант выведут следующее:\n' \
           f'B\n' \
           f'A\n' \
           f'B\n' \
           f'Варианты ответа:\n' \
           f'1) print("B", "A", "B")\n' \
           f'2) print("BAB")\n' \
           f'3) print("B")\n' \
           f'print("B")\n' \
           f'print("B")'

test_2_2_v1 = f'1'
test_2_2_v2 = "2"
test_2_2_v3 = f'3'
test_2_2_r = 'var_bab'

# Урок 3
lesson_3 = f'<b>Урок 3</b>\n' \
           f'<ins><b>Простые операции</b></ins>'
theory_3_mess = f'Итак, Python умеет писать, но умеет ли он считать? Давайте поговорим о вычислениях.\n' \
                f'Выполнить вычисление в Python не сложно, просто введите данные в функцию print ' \
                f'(не забудьте круглые скобки!):\n' \
                f'<b>print(2 + 2)</b>\n' \
                f'<b>print(5 + 4 - 3)</b>\n' \
                f'\n' \
                f'Вывод:\n' \
                f'<b>4</b>\n' \
                f'<b>6</b>\n' \
                f'\n' \
                f'Видите пробелы вокруг знаков плюс и минус? Данный код будет работать и без них, ' \
                f'но с ними его намного легче читать.' \
                f'\n' \
                f'Умножение и деление в Python также являются довольно простыми. Мы используем звездочку * ' \
                f'для умножения и косую черту / для деления. ' \
                f'И снова, мы просто ввели данные прямо в функцию print. Вот так:\n' \
                f'Print( 10 / 2 ) \n' \
                f'\n' \
                f'Как и в обычной математике, мы можем использовать круглые скобки для обозначения операций, ' \
                f'которые мы хотим выполнить в первую очередь (но нам также необходимо добавить скобки вокруг ' \
                f'выражения!). Вот так:\n' \
                f'Print( 2 * (3+4))\n' \
                f'\n' \
                f'Внимание!\n' \
                f'В результате использования косой черты для деления чисел получается десятичное число (или float, ' \
                f'как оно называется в программировании). Мы познакомимся с float в следующем уроке.'

test_3 = f'<ins><b>Тест:</b></ins>\n' \
         f'Какой из вариантов выведет этот код?\n' \
         f'print((4+8)/2)'

test_3_v1 = "6"
test_3_v2 = "8"
test_3_v3 = "6.0"
test_3_r = 'var_60'

# Урок 4
lesson_4 = f'<b>Урок 4</b>\n' \
           f'<ins><b>Типы данных</b></ins>'
theory_4_mess = f'Прежде чем мы продолжим, неплохо было бы рассказать об основных типах данных, которые мы ' \
                f'используем в Python. Каждое значение в Python имеет свой тип.\n' \
                f'Текст, например, "Hello world", называется строкой (<b>string</b>).' \
                f'Круглые числа называются целыми числами (<b>integer</b>).' \
                f'А числа с десятичной точкой называются вещественными числами (<b>float</b>).\n' \
                f'Теперь, когда вы познакомились со строками и целыми числами, время перейти к вещественным числам.\n' \
                f'Примерами вещественных чисел (<b>loat</b>) являются 0.5 и -7.8237591.'

test_4 = f'<ins><b>Тест:</b></ins>\n' \
         f'Какой из вариантов является вещественным числом?'

test_4_v1 = f'"Привет"'
test_4_v2 = "76435"
test_4_v3 = "7.4"
test_4_r = 'var_74'

# Урок 5
lesson_5 = f'<b>Урок 5</b>\n' \
           f'<ins><b>Вещественные числа</b></ins>'
theory_5_mess = f'Мы знаем, чем являются вещественные числа (<b>floats</b>), - числами с десятичной точкой, ' \
                f'но как нам их получить?\n' \
                f'Хорошо, мы можем получить вещественное число, разделив любые два целых числа.\n' \
                f'Или мы можем выполнить операцию с двумя вещественными числами, или с вещественным числом ' \
                f'и целым числом.\n' \
                f'print( 8 / 2 )\n' \
                f'print( 6 * 7.0 )\n' \
                f'print( 4 + 1.65 )\n' \
                f'Вещественное число можно добавить к целому, потому что Python автоматически преобразует целое число в ' \
                f'вещественное. Умный Python!'

test_5 = f'<ins><b>Тест:</b></ins>\n' \
         f'Что выведет этот код?\n' \
         f'print(1+2+3+4.0+5)'

test_5_v1 = f'15'
test_5_v2 = "14.0"
test_5_v3 = "15.0"
test_5_r = 'var_150'

# Урок 6
lesson_6 = f'<b>Урок 6</b>\n' \
           f'<ins><b>Возведение в степень</b></ins>'
theory_6_mess = f'Хорошо, мы изучили самые базовые операции, сложение, вычитание, умножение и деление. ' \
                f'У вас хорошо получается!\n' \
                f'Теперь время перейти на следующий уровень и познакомиться с возведением в степень – тем, ' \
                f'что мы называем, когда число многократно умножается на себя.\n' \
                f'Операция возведения в степень осуществляется с помощью двух звездочек. Вот так:\n' \
                f'print(2**5)\n' \
                f'\n' \
                f'Вы можете создать цепочку возведения в степень. Другими словами, вы можете возвести число в ' \
                f'несколько степеней. Например, 2**3**2.'

test_6 = f'<ins><b>Тест:</b></ins>\n' \
         f'Что нужно вписать в print(), чтобы вывести результат возведения 5 в 3-ю степень?'

test_6_v1 = f'5 * 3'
test_6_v2 = "5 ^ 3"
test_6_v3 = "5 ** 3"
test_6_r = 'var_53'

theory_6_2_mess = f'Слишком просто? Хорошо. Но как насчет возведения в степень с вещественными числами? ' \
                  f'Мы можем свободно использовать вещественные числа при возведении в степень.\n' \
                  f'Посмотрите. В результате следующего кода получится квадратный корень из 9:\n' \
                  f'<b>print(9 ** (1 / 2) )</b>\n' \
                  f'В результате будет получено вещественное число.\n'

test_6_2 = f'<ins><b>Тест:</b></ins>\n' \
           f'Что выведет этот код?\n' \
           f'print(8 ** (1 / 3) )'

test_6_2_v1 = f'2'
test_6_2_v2 = "3.0"
test_6_2_v3 = f'2.0'
test_6_2_r = 'var_20'

# Урок 7
lesson_7 = f'<b>Урок 7</b>\n' \
           f'<ins><b>Частное от деления</b></ins>'
theory_7_mess = f'Целочисленное деление осуществляется с помощью двух косых черт и используется для получения ' \
                f'частного от деления. Подождите! Что?! "Целочисленное деление"? "Частное"?\n' \
                f'Частное просто означает величину, полученную при делении двух чисел.\n' \
                f'А целочисленное деление похоже на обычное деление, за исключением того, что оно возвращает ' \
                f'возможное максимальное целое число. Это целое число будет меньше или равно результату ' \
                f'обычного деления.\n' \
                f'print(20 // 6)\n' \
                f'Приведенный выше код выведет 3, потому что 6 включается в 20 три раза, что является возможным ' \
                f'максимальным целым числом.\n' \
                f'Вы также можете использовать целочисленное деление с вещественными числами, и результатом всегда ' \
                f'будет вещественным числом.'

test_7 = f'<ins><b>Тест:</b></ins>\n' \
         f'Что выведет этот код?\n' \
         f'print(10 // 4)'

test_7_v1 = f'0'
test_7_v2 = "3"
test_7_v3 = f'2'
test_7_r = 'var_2'

# Урок 8
lesson_8 = f'<b>Урок 8</b>\n' \
           f'<ins><b>Остаток</b></ins>'
theory_8_mess = f'Мы можем использовать оператор деления с остатком, который обозначается знаком процента (<b>%</b>), ' \
                f'чтобы получить остаток от заданного деления.\n' \
                f'print(20 % 6)\n' \
                f'print(1.25 % 0.5)\n' \
                f'Все числовые операторы также могут использоваться с вещественными числами.'

test_8 = f'<ins><b>Тест:</b></ins>\n' \
         f'Что выведет этот код?\n' \
         f'print(7 % (5 // 2))'

test_8_v1 = f'7'
test_8_v2 = "0"
test_8_v3 = f'1'
test_8_r = 'var_1'
